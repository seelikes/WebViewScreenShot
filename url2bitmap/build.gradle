apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 103
        versionName "1.0.3"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    api 'com.java.lib:oil:1.1.15'
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    options.linkSource true
    options.encoding "UTF-8"
    classpath += files(android.getBootClasspath().join(File.pathSeparator))
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = "javadoc"
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = "sources"
    from android.sourceSets.main.java.sourceFiles
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId "com.ltt.android.lib"
            artifactId "url2bitmap"
            version "1.0.3"
            artifact androidJavadocsJar
            artifact androidSourcesJar
            artifact bundleRelease
            pom.withXml {
                def dependencies = asNode().appendNode('dependencies')
                wrapIntoDependencies(dependencies, configurations.api, "compile")
                wrapIntoDependencies(dependencies, configurations.implementation, "provided")
                wrapIntoDependencies(dependencies, configurations.compileOnly, "runtime")
                wrapIntoDependencies(dependencies, configurations.testImplementation, "test")
                wrapIntoDependencies(dependencies, configurations.androidTestImplementation, "test")
            }
        }
    }
    repositories {
        maven {
            url project.property('deploy.release.url')
            credentials {
                username project.property("deploy.release.user.name")
                password project.property("deploy.release.user.password")
            }
        }
    }
}
